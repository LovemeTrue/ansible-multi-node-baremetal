apiVersion: v1
items:
- metadata:
    creationTimestamp: "2025-08-02T11:51:59Z"
    labels:
      component: apiserver
      provider: kubernetes
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:labels:
            .: {}
            f:component: {}
            f:provider: {}
        f:spec:
          f:clusterIP: {}
          f:internalTrafficPolicy: {}
          f:ipFamilyPolicy: {}
          f:ports:
            .: {}
            k:{"port":443,"protocol":"TCP"}:
              .: {}
              f:name: {}
              f:port: {}
              f:protocol: {}
              f:targetPort: {}
          f:sessionAffinity: {}
          f:type: {}
      manager: kube-apiserver
      operation: Update
      time: "2025-08-02T11:51:59Z"
    name: kubernetes
    namespace: default
    resourceVersion: "231"
    uid: 56e90db6-bc8b-49b0-bd68-3d5d2e3d1d3e
  spec:
    clusterIP: 10.96.0.1
    clusterIPs:
    - 10.96.0.1
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: https
      port: 443
      protocol: TCP
      targetPort: 6443
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- metadata:
    annotations:
      meta.helm.sh/release-name: cilium
      meta.helm.sh/release-namespace: kube-system
      prometheus.io/port: "9964"
      prometheus.io/scrape: "true"
    creationTimestamp: "2025-08-03T13:49:40Z"
    labels:
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: cilium-envoy
      app.kubernetes.io/part-of: cilium
      io.cilium/app: proxy
      k8s-app: cilium-envoy
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:meta.helm.sh/release-name: {}
            f:meta.helm.sh/release-namespace: {}
            f:prometheus.io/port: {}
            f:prometheus.io/scrape: {}
          f:labels:
            .: {}
            f:app.kubernetes.io/managed-by: {}
            f:app.kubernetes.io/name: {}
            f:app.kubernetes.io/part-of: {}
            f:io.cilium/app: {}
            f:k8s-app: {}
        f:spec:
          f:clusterIP: {}
          f:internalTrafficPolicy: {}
          f:ports:
            .: {}
            k:{"port":9964,"protocol":"TCP"}:
              .: {}
              f:name: {}
              f:port: {}
              f:protocol: {}
              f:targetPort: {}
          f:selector: {}
          f:sessionAffinity: {}
          f:type: {}
      manager: helm
      operation: Update
      time: "2025-08-03T13:49:40Z"
    name: cilium-envoy
    namespace: kube-system
    resourceVersion: "184875"
    uid: 9577067d-1b46-4e05-9261-889b2788669c
  spec:
    clusterIP: None
    clusterIPs:
    - None
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: envoy-metrics
      port: 9964
      protocol: TCP
      targetPort: envoy-metrics
    selector:
      k8s-app: cilium-envoy
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- metadata:
    annotations:
      meta.helm.sh/release-name: cilium
      meta.helm.sh/release-namespace: kube-system
    creationTimestamp: "2025-08-03T13:49:40Z"
    labels:
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: hubble-peer
      app.kubernetes.io/part-of: cilium
      k8s-app: cilium
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:meta.helm.sh/release-name: {}
            f:meta.helm.sh/release-namespace: {}
          f:labels:
            .: {}
            f:app.kubernetes.io/managed-by: {}
            f:app.kubernetes.io/name: {}
            f:app.kubernetes.io/part-of: {}
            f:k8s-app: {}
        f:spec:
          f:internalTrafficPolicy: {}
          f:ports:
            .: {}
            k:{"port":443,"protocol":"TCP"}:
              .: {}
              f:name: {}
              f:port: {}
              f:protocol: {}
              f:targetPort: {}
          f:selector: {}
          f:sessionAffinity: {}
          f:type: {}
      manager: helm
      operation: Update
      time: "2025-08-03T13:49:40Z"
    name: hubble-peer
    namespace: kube-system
    resourceVersion: "184883"
    uid: 127a4076-32ee-4b91-a89c-a46eda808b8c
  spec:
    clusterIP: 10.111.74.126
    clusterIPs:
    - 10.111.74.126
    internalTrafficPolicy: Local
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: peer-service
      port: 443
      protocol: TCP
      targetPort: 4244
    selector:
      k8s-app: cilium
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- metadata:
    annotations:
      meta.helm.sh/release-name: cilium
      meta.helm.sh/release-namespace: kube-system
    creationTimestamp: "2025-08-03T13:49:40Z"
    labels:
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: hubble-relay
      app.kubernetes.io/part-of: cilium
      k8s-app: hubble-relay
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:meta.helm.sh/release-name: {}
            f:meta.helm.sh/release-namespace: {}
          f:labels:
            .: {}
            f:app.kubernetes.io/managed-by: {}
            f:app.kubernetes.io/name: {}
            f:app.kubernetes.io/part-of: {}
            f:k8s-app: {}
        f:spec:
          f:internalTrafficPolicy: {}
          f:ports:
            .: {}
            k:{"port":80,"protocol":"TCP"}:
              .: {}
              f:port: {}
              f:protocol: {}
              f:targetPort: {}
          f:selector: {}
          f:sessionAffinity: {}
          f:type: {}
      manager: helm
      operation: Update
      time: "2025-08-03T13:49:40Z"
    name: hubble-relay
    namespace: kube-system
    resourceVersion: "184879"
    uid: 3954a635-7aa1-476c-a923-d8b8b9e4c1bc
  spec:
    clusterIP: 10.100.166.190
    clusterIPs:
    - 10.100.166.190
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - port: 80
      protocol: TCP
      targetPort: grpc
    selector:
      k8s-app: hubble-relay
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- metadata:
    annotations:
      meta.helm.sh/release-name: cilium
      meta.helm.sh/release-namespace: kube-system
    creationTimestamp: "2025-08-03T13:49:40Z"
    labels:
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: hubble-ui
      app.kubernetes.io/part-of: cilium
      k8s-app: hubble-ui
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:meta.helm.sh/release-name: {}
            f:meta.helm.sh/release-namespace: {}
          f:labels:
            .: {}
            f:app.kubernetes.io/managed-by: {}
            f:app.kubernetes.io/name: {}
            f:app.kubernetes.io/part-of: {}
            f:k8s-app: {}
        f:spec:
          f:internalTrafficPolicy: {}
          f:ports:
            .: {}
            k:{"port":80,"protocol":"TCP"}:
              .: {}
              f:name: {}
              f:port: {}
              f:protocol: {}
              f:targetPort: {}
          f:selector: {}
          f:sessionAffinity: {}
          f:type: {}
      manager: helm
      operation: Update
      time: "2025-08-03T13:49:40Z"
    name: hubble-ui
    namespace: kube-system
    resourceVersion: "184887"
    uid: bfb63f0b-d8fb-4726-bc40-febef24ebeb1
  spec:
    clusterIP: 10.96.196.29
    clusterIPs:
    - 10.96.196.29
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: http
      port: 80
      protocol: TCP
      targetPort: 8081
    selector:
      k8s-app: hubble-ui
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- metadata:
    annotations:
      prometheus.io/port: "9153"
      prometheus.io/scrape: "true"
    creationTimestamp: "2025-08-02T11:52:01Z"
    labels:
      k8s-app: kube-dns
      k8slens-edit-resource-version: v1
      kubernetes.io/cluster-service: "true"
      kubernetes.io/name: CoreDNS
      type: ClusterIp
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:prometheus.io/port: {}
            f:prometheus.io/scrape: {}
          f:labels:
            .: {}
            f:k8s-app: {}
            f:kubernetes.io/cluster-service: {}
            f:kubernetes.io/name: {}
        f:spec:
          f:clusterIP: {}
          f:internalTrafficPolicy: {}
          f:ports:
            .: {}
            k:{"port":53,"protocol":"TCP"}:
              .: {}
              f:name: {}
              f:port: {}
              f:protocol: {}
              f:targetPort: {}
            k:{"port":53,"protocol":"UDP"}:
              .: {}
              f:name: {}
              f:port: {}
              f:protocol: {}
              f:targetPort: {}
            k:{"port":9153,"protocol":"TCP"}:
              .: {}
              f:name: {}
              f:port: {}
              f:protocol: {}
              f:targetPort: {}
          f:selector: {}
          f:sessionAffinity: {}
          f:type: {}
      manager: kubeadm
      operation: Update
      time: "2025-08-02T11:52:01Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:labels:
            f:k8slens-edit-resource-version: {}
            f:type: {}
      manager: node-fetch
      operation: Update
      time: "2025-08-03T11:36:47Z"
    name: kube-dns
    namespace: kube-system
    resourceVersion: "189396"
    uid: af94a58b-c0ee-417f-94b8-f17f4b5cc977
  spec:
    clusterIP: 10.96.0.10
    clusterIPs:
    - 10.96.0.10
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: dns
      port: 53
      protocol: UDP
      targetPort: 53
    - name: dns-tcp
      port: 53
      protocol: TCP
      targetPort: 53
    - name: metrics
      port: 9153
      protocol: TCP
      targetPort: 9153
    selector:
      k8s-app: kube-dns
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"labels":{"k8s-app":"metrics-server"},"name":"metrics-server","namespace":"kube-system"},"spec":{"ports":[{"appProtocol":"https","name":"https","port":443,"protocol":"TCP","targetPort":"https"}],"selector":{"k8s-app":"metrics-server"}}}
    creationTimestamp: "2025-08-03T12:50:47Z"
    labels:
      k8s-app: metrics-server
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubectl.kubernetes.io/last-applied-configuration: {}
          f:labels:
            .: {}
            f:k8s-app: {}
        f:spec:
          f:internalTrafficPolicy: {}
          f:ports:
            .: {}
            k:{"port":443,"protocol":"TCP"}:
              .: {}
              f:appProtocol: {}
              f:name: {}
              f:port: {}
              f:protocol: {}
              f:targetPort: {}
          f:selector: {}
          f:sessionAffinity: {}
          f:type: {}
      manager: kubectl-client-side-apply
      operation: Update
      time: "2025-08-03T12:50:47Z"
    name: metrics-server
    namespace: kube-system
    resourceVersion: "176078"
    uid: 8adec495-e456-4ee9-9367-7c7e0d87193e
  spec:
    clusterIP: 10.105.233.177
    clusterIPs:
    - 10.105.233.177
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - appProtocol: https
      name: https
      port: 443
      protocol: TCP
      targetPort: https
    selector:
      k8s-app: metrics-server
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
kind: ServiceList
metadata:
  resourceVersion: "190021"
